install.packages("rmarkdown")
install.packages("blogdown")
blogdown::install_hugo(force = TRUE)
blogdown::serve_site()
install.packages(lmer)
install.packages(lme4)
install.packages("lme4")
install.packages("lmerTest")
install.packages("emmeans")
devtools::install_github("rvlenth/emmeans", dependencies = TRUE, build_opts = "")
install.packages("devtools")
devtools::install_github("rvlenth/emmeans", dependencies = TRUE, build_opts = "")
install.packages("devtools")
install.packages("emmeans")
install.packages("mvtnorm")
install.packages("emmeans")
update.packages(ask = FALSE, checkBuilt = TRUE)
update.packages(ask = FALSE, checkBuilt = TRUE)
install.packages("rmarkdown")
install.packages("blogdown")
blogdown::install_hugo(force = TRUE)
blogdown::serve_site()
insertClassMethods()
install.packages("lme4")
install.packages("lmerTest")
install.packages("tidyverse")
install.packages("emmeans")
install.packages("car")
blogdown::serve_site()
install.packages("car")
blogdown::serve_site()
blogdown::serve_site()
library("blogdown")
blogdown::serve_site()
blogdown::serve_site()
servr::deamon_stop(2)
server::deamon_stop(2)
servr::daemon_stop(2)
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
install.packages('vitae', dependencies=TRUE, repos='http://cran.rstudio.com/')
install.packages('vitae')
install.packages(c("backports", "blogdown", "bookdown", "broom", "callr", "cli", "clipr", "colorspace", "dbplyr", "digest", "dplyr", "fs", "generics", "glue", "jsonlite", "knitr", "labeling", "lubridate", "magrittr", "pillar", "pkgbuild", "processx", "ps", "R6", "Rcpp", "readr", "rlang", "rmarkdown", "rprojroot", "rstudioapi", "servr", "stringi", "sys", "testthat", "tibble", "tidyr", "tinytex", "vctrs", "withr", "xfun"))
install.packages(c("backports", "blogdown", "bookdown", "broom", "callr", "cli", "clipr", "colorspace", "dbplyr", "digest", "dplyr", "fs", "generics", "glue", "jsonlite", "knitr", "labeling", "lubridate", "magrittr", "pillar", "pkgbuild", "processx", "ps", "R6", "Rcpp", "readr", "rlang", "rmarkdown", "rprojroot", "rstudioapi", "servr", "stringi", "sys", "testthat", "tibble", "tidyr", "tinytex", "vctrs", "withr", "xfun"))
install.packages(c("backports", "blogdown", "bookdown", "broom", "callr", "cli", "clipr", "colorspace", "dbplyr", "digest", "dplyr", "fs", "generics", "glue", "jsonlite", "knitr", "labeling", "lubridate", "magrittr", "pillar", "pkgbuild", "processx", "ps", "R6", "Rcpp", "readr", "rlang", "rmarkdown", "rprojroot", "rstudioapi", "servr", "stringi", "sys", "testthat", "tibble", "tidyr", "tinytex", "vctrs", "withr", "xfun"))
install.packages(c("backports", "blogdown", "bookdown", "broom", "callr", "cli", "clipr", "colorspace", "dbplyr", "digest", "dplyr", "fs", "generics", "glue", "jsonlite", "knitr", "labeling", "lubridate", "magrittr", "pillar", "pkgbuild", "processx", "ps", "R6", "Rcpp", "readr", "rlang", "rmarkdown", "rprojroot", "rstudioapi", "servr", "stringi", "sys", "testthat", "tibble", "tidyr", "tinytex", "vctrs", "withr", "xfun"))
install.packages('vitae')
install.packages('vitae')
devtools::install_github("mitchelloharawild/vitae")
install.packages('devtools')
install.packages("devtools")
install.packages("devtools")
install.packages('vitae')
setRepositories()
setRepositories()
setRepositories()
install.packages('vitae')
ap <- available.packages()
View(ap)
install.packages(vitae)
install.packages('vitae')
hugo --version
hugo
blogdown::hugo_version()
.libPaths(
)
)
.libPaths()
install.packages('vitae')
